#!/usr/bin/env ruby

require "fileutils"
require 'optparse'
require 'erubis'

WORKING_DIRECTORY = FileUtils.pwd
COMMIT_MSG_FILE  = "#{WORKING_DIRECTORY}/.git/hooks/commit-msg"
HOOKR_FILE        = "#{WORKING_DIRECTORY}/.hookr"

if !File.exist?("#{WORKING_DIRECTORY}/.git")
  puts "You should do this in the root directory of a Git project."
  exit 1
end

HOOKR_TEMPLATES   = {}
Dir["#{File.dirname(__FILE__)}/../data/templates/*.rb"].each do |file|
  HOOKR_TEMPLATES[File.basename(file, ".rb")] = file
end

ARGV << "-h" if ARGV.size == 0

options = {}
option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: hookr [options]"
  opts.on("-t", "--template [FILE]", "Name or path of the .hookr template") do |path|
    template_path = HOOKR_TEMPLATES[path] || path
    unless template_path && File.exists?(template_path)
      puts "Template not found: #{path}"
      exit 1
    end
    options[:template] = template_path
  end
  opts.on("-f", "--force", "Overwrite the current .hookr file and commit-msg hook file") do |force|
    options[:force] = force
  end
  opts.on("-g", "--global [GIT TEMPLATE PATH]", "Add a global commit-msg hook template file") do |global|
    options[:global] = File.join( (global || "/usr/local/git/share/git-core/templates/hooks"), "commit-msg" )
  end
  opts.on("-i", "--nohook", "Do not add the commit-msg hook to the repository") do |ignore|
    options[:no_hook] = ignore
  end
  opts.on("-d", "--delete", "Delete the hookr files") do |delete|
    options[:delete] = delete
  end
  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit 1
  end
end
option_parser.parse!

template_options= {}
ARGV.each do |o|
  key,value = o.split(":")
  template_options[key] = value
end

puts "\n"
puts "Yo dawg I herd u like commit hooks, so I edited some file in ur directories:\n\n"

if (options[:force] || !File.exist?(HOOKR_FILE)) && options[:template]
  template = Erubis::Eruby.new(File.read(options[:template]))
  File.open(HOOKR_FILE, "w+") do |f|
    f.write template.evaluate(template_options)
  end
  puts "  added: .hookr"
end

if !options[:no_hook] && (options[:force] || !File.exist?(COMMIT_MSG_FILE))
  FileUtils.cp "#{File.dirname(__FILE__)}/../data/templates/commit-msg.rb", COMMIT_MSG_FILE
  FileUtils.chmod 0755, COMMIT_MSG_FILE
  puts "  added: .git/hooks/commit-msg"
end

if options[:global]
  FileUtils.cp "#{File.dirname(__FILE__)}/../data/templates/commit-msg.rb", options[:global]
  FileUtils.chmod 0755, options[:global]
  puts "  added #{options[:global]}"
end

if options[:delete]
  puts "Well then, if it makes you happy... let's remove the hookr\n\n"
  if File.exists?(COMMIT_MSG_FILE)
    FileUtils.rm(COMMIT_MSG_FILE) 
    puts "  removed .git/hooks/commit-msg"
  end
  if File.exists?(HOOKR_FILE)
    FileUtils.rm(HOOKR_FILE) 
    puts "  removed .hookr"
  end
  if options[:global] && File.exists?(options[:global])
    FileUtils.rm(options[:global]) 
    puts "  remove #{options[:global]}"
  end
end

puts "\n"
puts "DONE"
puts "\n"
exit 0

